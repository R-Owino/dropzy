services:
  terraform:
    build:
      context: .
      dockerfile: infra/Dockerfile
    environment:
      - TF_LOG=INFO
    volumes:
      - ./:/app
      - ~/.aws:/root/.aws:ro
      - ./scripts:/scripts
    working_dir: /app
    networks:
      - file-share
    entrypoint: [ "/bin/bash", "-c" ]
    command: >
      "terraform -chdir=infra apply -auto-approve &&
      /scripts/generate-env.sh &&
      touch /app/terraform-complete"
    healthcheck:
      test: ["CMD", "sh", "-c", "if [ -f /app/terraform-complete ]; then exit 0; else exit 1; fi"]
      interval: 2s
      timeout: 1s
      retries: 10
  
  redis:
    image: redis
    container_name: some-redis
    env_file:
      - api/v1/.env
    volumes:
      - ./scripts:/scripts
    entrypoint: ["sh", "/scripts/redis-entrypoint.sh"]
    networks:
      - file-share
    healthcheck:
      test: ["CMD", "sh", "-c", "echo 'auth $${REDIS_PASSWORD}\nping' | redis-cli"]
      interval: 5s
      timeout: 3s
      retries: 5

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - type: bind
        source: ./api/v1/.env
        target: /app/v1/.env
        read_only: true
      - ~/.aws:/root/.aws:ro
      - ./api/v1/static:/app/v1/static
      - ./api/v1/templates:/app/v1/templates
    depends_on:
      redis:
        condition: service_healthy
      terraform:
        condition: service_healthy
    networks:
      - file-share

networks:
  file-share:
    driver: bridge
